{"version":3,"file":"static/js/292.58d052c6.chunk.js","mappings":"qVAIaA,EAAa,mCAAG,WAAOC,GAAP,gGAEEC,IAAAA,KAAA,kBAA8BD,GAFhC,cAEfE,EAFe,yBAGdA,EAASC,MAHK,gCAKrBC,QAAQC,IAAI,yCALS,yDAAH,sD,mBCOpBC,GAAYC,EAAAA,EAAAA,GAAW,CAC3BC,SAAU,CACRC,YAAa,kBACbC,YAAa,QACbC,YAAa,QACbC,SAAU,WACVC,UAAW,gBACXC,OAAQ,MACRC,MAAO,MACPC,QAAS,QACTC,UAAW,QAEbC,UAAW,CACTT,YAAa,kBACbC,YAAa,QACbC,YAAa,QACbC,SAAU,WACVC,UAAW,gBACXC,OAAQ,MACRC,MAAO,MACPC,QAAS,QACTC,UAAW,UAIA,SAASE,IACtB,IAAMC,EAAUd,IACVe,GAAQC,EAAAA,EAAAA,GAAc,sBACtBC,GAAQD,EAAAA,EAAAA,GAAc,qBACtBE,GAAKF,EAAAA,EAAAA,GAAc,qBAEzB,EAA4EG,EAAAA,WAAiBC,EAAAA,GAArFC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,eAAgBC,EAA7C,EAA6CA,SAAUC,EAAvD,EAAuDA,QAASC,EAAhE,EAAgEA,QAChE,EAAgCP,EAAAA,SAAeO,EAAQF,EAASG,uBAAhE,eAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BV,EAAAA,SAAeO,EAAQF,EAASM,oBAA1D,eAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCb,EAAAA,SAAe,IAA/C,eAAOc,EAAP,KAAiBC,EAAjB,KACA,EAA0Cf,EAAAA,SAAegB,aAAaC,QAAQ,mBAA9E,eAAOC,EAAP,KAAsBC,EAAtB,KAVgC,SAyBjBC,IAzBiB,uEAyBhC,2FACMC,EAAqB,uEACrBC,EAAwB,6DACvBV,EAAMW,MAAMF,GAHnB,uBAIInB,GAAQ,GACRE,EAAe,SACfD,EAAW,iBANf,6BASOM,EAASc,MAAMD,GATtB,wBAUIpB,GAAQ,GACRE,EAAe,SACfD,EAAW,8DAZf,kCAeQqB,EAAS,CACbC,OAAQlB,EAAQF,EAASqB,oBACzBC,SAAUlB,EACVmB,MAAOhB,GAlBX,UAoBuBtC,EAAckD,GApBrC,mBAqBeK,aArBf,iBAsBIC,OAAOC,SAASC,QAAO,GAtB3B,UAwBMhB,aAAaiB,QAAQ,aAAcC,KAAKC,UAAU,CAChDT,mBAAoBrB,EAASqB,mBAC7BlB,qBAAsBF,EAAQG,GAC9BE,kBAAmBL,EAAQM,MAE7BI,aAAaiB,QAAQ,kBAAkB,GA7B7C,iFA+BaG,GA/Bb,gCAmCIlC,GAAQ,GACRE,EAAe,SACfD,EAAW,yCArCf,4DAzBgC,sBAkEhC,IAYMkC,EAAW,mCAAG,qGACGC,EAAAA,EAAAA,GAAiB,CACpCV,MAAOhB,IAFS,QACdnC,EADc,QAIJsC,EAAYtC,EAAS8D,MAAM,EAAG,KAE1CrC,GAAQ,GACRE,EAAe,SACfD,EAAW,oEARK,2CAAH,qDAYjB,OAEE,4BACE,SAACqC,EAAA,EAAD,CAAQC,YAlFQ,CAClB,CAAEC,KAAM,gBAAiBC,IAAK,QAmF1B/C,GAASE,IAEP,UAAC8C,EAAA,EAAD,CAAKC,GAAI,CAAEtD,QAAS,OAAQF,OAAQ,SAApC,WACE,SAACuD,EAAA,EAAD,CAAKC,GAAI,CAAEvD,MAAO,MAAOwD,GAAI,IAA7B,UACE,UAACF,EAAA,EAAD,CAAKC,GAAI,CAAEtD,QAAS,OAAQwD,eAAgB,gBAAiBC,OAAQ,UAAWC,WAAY,SAAUC,UAAW,kBAAmBC,aAAc,kBAAmBC,GAAI,EAAGC,GAAI,EAAGC,WAAY,WAA/L,WACE,SAACC,EAAA,EAAD,CAAYV,GAAI,CAAEW,SAAU,QAA5B,uBACA,SAACC,EAAA,EAAD,CAAqBZ,GAAI,CAAEW,SAAU,gBAGzC,UAACZ,EAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,GAAIxD,MAAO,QAA1B,WACE,SAACiE,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQG,GAAI,EAAGN,GAAI,GAAjE,gCACA,SAACO,EAAA,EAAD,KAEA,UAAChB,EAAA,EAAD,CAAKC,GAAI,CAAEtD,QAAS,OAAQsE,eAAgB,eAAgBZ,WAAY,SAAUa,EAAG,GAArF,WACE,SAACP,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQO,WAAY,MAAOJ,GAAI,EAAGN,GAAI,GAApF,mBACA,kBACEW,aAAczD,EAAQF,EAASG,sBAC/ByD,SAAU,SAACC,GAAD,OA5FIC,EA4FwBD,EAAEE,OAAOD,WA3F7DzD,EAAYyD,GADd,IAA8BA,GA6FdE,KAAK,OACLC,MAAO,CACLC,OAAQ,oBACRC,WAAY,OACZlF,MAAO,MACPD,OAAQ,OACRmE,SAAU,OACViB,YAAa,OACbC,WAAY,cAIlB,UAAC9B,EAAA,EAAD,CAAKC,GAAI,CAAEtD,QAAS,OAAQsE,eAAgB,eAAgBZ,WAAY,SAAUa,EAAG,GAArF,WACE,SAACP,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQO,WAAY,MAAOJ,GAAI,EAAGN,GAAI,GAApF,oBACA,kBACEW,aAAczD,EAAQF,EAASM,mBAC/BsD,SAAU,SAACC,GAAD,OAjHCC,EAiHwBD,EAAEE,OAAOD,WAhH1DtD,EAASsD,GADX,IAA2BA,GAkHXE,KAAK,OACLC,MAAO,CACLpB,UAA2B,SAAhBhC,EAAuB,OAAO,oBACzCiC,aAA6B,SAAhBjC,EAAuB,OAAQ,oBAC5CyD,WAA2B,SAAhBzD,EAAuB,OAAQ,oBAC1C0D,YAAa,OACbJ,WAAY,OACZlF,MAAO,MACPD,OAAQ,OACRmE,SAAU,OACViB,YAAa,OACbC,WAAY,UAGE,SAAhBxD,GACE,SAAC2D,EAAA,EAAD,CAASC,MAAM,WAAWC,UAAU,QAAQC,OAAK,EAAjD,UACE,SAACpC,EAAA,EAAD,CAAKqC,UAAWtF,EAAQF,UAAWoD,GAAI,CAAEc,GAAI,SAG/C,SAACkB,EAAA,EAAD,CAASC,MAAM,eAAeC,UAAU,QAAQC,OAAK,EAArD,UACE,SAACE,EAAA,EAAD,CAAarC,GAAI,CAAExD,OAAQ,OAAQ6D,UAAW,oBAAqBC,aAAc,oBAAqByB,YAAa,oBAAqBD,WAAY,OAAQnB,SAAU,OAAQE,MAAO,MAAON,GAAI,EAAGE,WAAY,kBAMrNxC,GACE,UAAC8B,EAAA,EAAD,CAAKC,GAAI,CAAEc,GAAI,IAAf,WACE,kBACEwB,YAAY,MACZd,KAAK,SACLJ,SAAU,SAAAC,GA/FN,IAACC,EACF,KADEA,EA+F0BD,EAAEE,OAAOD,OA9FhDiB,QACJjB,IAAUrD,IACZK,GAAiB,GACjBJ,EAAY,IACZC,aAAaiB,QAAQ,kBAAkB,KA2FzBqC,MAAO,CACLC,OAAQ,OACRpB,aAAc,kBACdqB,WAAY,OACZa,UAAW,SAEXhG,OAAQ,OACRmE,SAAU,OACV8B,OAAQ,eAEZ,mBACA,SAACC,EAAA,EAAD,CAAQ1C,GAAI,CAAEW,SAAU,OAAQgC,cAAe,OAAQ7B,GAAI,GAAK8B,QAAQ,YAAYC,QAASrD,EAA7F,wBAGF,8BAAmB,SAAhBnB,EAAyB,MAAO,SAACqC,EAAA,EAAD,CAAYV,GAAI,CAAE8C,QAAS,MAAO3C,OAAQ,UAAWQ,SAAU,OAAQkB,WAAY,QAASkB,eAAgB,aAAeF,QAASrD,EAApI,gEAGvC,UAACO,EAAA,EAAD,CAAKC,GAAI,CAAEtD,QAAS,OAAQsE,eAAgB,eAAgBZ,WAAY,SAAUa,EAAG,GAArF,WACE,SAACP,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQO,WAAY,MAAOJ,GAAI,EAAGN,GAAI,GAApF,qBACA,SAACE,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQO,WAAY,MAAOJ,GAAI,EAAGN,GAAI,GAApF,SAA0F9C,EAAQF,EAASqB,oBAAoBa,MAAM,MACrI,SAACsC,EAAA,EAAD,CAASC,MAAM,WAAWC,UAAU,QAAQC,OAAK,EAAjD,UACE,SAACpC,EAAA,EAAD,CAAKqC,UAAWtF,EAAQZ,SAAU8D,GAAI,CAAEc,GAAI,YAIhD,SAACf,EAAA,EAAD,CAAKC,GAAI,CACPwC,UAAW,SACX7F,UAAW,QAFb,UAIE,cAAG8E,MAAO,CACRZ,MAAO,QACPF,SAAU,OACVoC,eAAgB,OAChBN,OAAQ,WACRO,QAAS,MACTvC,WAAY,8CACZwC,WAAY,UACZxG,MAAO,KACP0D,OAAQ,WAER0C,QAAStE,EAXX,oCAuBNxB,GAASE,IAAUC,IACnB,UAAC6C,EAAA,EAAD,CAAKC,GAAI,CAAEvD,MAAO,OAAQyG,GAAI,GAA9B,WACE,SAACxC,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQG,GAAI,EAAGN,GAAI,GAAjE,gCACA,SAACO,EAAA,EAAD,KAEA,UAAChB,EAAA,EAAD,CAAKC,GAAI,CAAEtD,QAAS,OAAQsE,eAAgB,eAAgBZ,WAAY,SAAUa,EAAG,GAArF,WACE,SAACP,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQO,WAAY,MAAOJ,GAAI,EAAGN,GAAI,GAApF,mBACA,kBACEc,MAAO5D,EAAQF,EAASG,sBACxB6D,KAAK,OACLC,MAAO,CACLC,OAAQ,oBACRC,WAAY,OACZlF,MAAO,MACPD,OAAQ,OACRmE,SAAU,OACViB,YAAa,OACbC,WAAY,cAIlB,UAAC9B,EAAA,EAAD,CAAKC,GAAI,CAAEtD,QAAS,OAAQsE,eAAgB,eAAgBZ,WAAY,SAAUa,EAAG,GAArF,WACE,SAACP,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQO,WAAY,MAAOJ,GAAI,EAAGN,GAAI,GAApF,oBACA,kBACEc,MAAO5D,EAAQF,EAASM,mBACxB0D,KAAK,OACLC,MAAO,CACLpB,UAAW,oBACXC,aAAc,oBACdwB,WAAY,oBACZC,YAAa,OACbJ,WAAY,OACZlF,MAAO,MACPD,OAAQ,OACRmE,SAAU,OACViB,YAAa,OACbC,WAAY,WAEhB,SAACG,EAAA,EAAD,CAASC,MAAM,eAAeC,UAAU,QAAQC,OAAK,EAArD,UACE,SAACE,EAAA,EAAD,CAAarC,GAAI,CAAExD,OAAQ,OAAQ6D,UAAW,oBAAqBC,aAAc,oBAAqByB,YAAa,oBAAqBD,WAAY,OAAQnB,SAAU,OAAQE,MAAO,MAAON,GAAI,EAAGE,WAAY,mBAGnN,SAACC,EAAA,EAAD,CAAYV,GAAI,CAAE8C,QAAS,MAAO3C,OAAQ,UAAWQ,SAAU,OAAQkB,WAAY,QAASkB,eAAgB,aAA5G,+BACA,UAAChD,EAAA,EAAD,CAAKC,GAAI,CAAEtD,QAAS,OAAQsE,eAAgB,eAAgBZ,WAAY,SAAUa,EAAG,GAArF,WACE,SAACP,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQO,WAAY,MAAOJ,GAAI,EAAGN,GAAI,GAApF,qBACA,SAACE,EAAA,EAAD,CAAYV,GAAI,CAAEa,MAAO,UAAWF,SAAU,OAAQO,WAAY,MAAOJ,GAAI,EAAGN,GAAI,GAApF,SAA0F9C,EAAQF,EAASqB,oBAAoBa,MAAM,MACrI,SAACsC,EAAA,EAAD,CAASC,MAAM,WAAWC,UAAU,QAAQC,OAAK,EAAjD,UACE,SAACpC,EAAA,EAAD,CAAKqC,UAAWtF,EAAQZ,SAAU8D,GAAI,CAAEc,GAAI,YAIhD,SAACf,EAAA,EAAD,CAAKC,GAAI,CACPwC,UAAW,SACX7F,UAAW,QAFb,UAIE,SAAC+D,EAAA,EAAD,CAAYV,GAAI,CACda,MAAO,QACPF,SAAU,OACVoC,eAAgB,OAChBC,QAAS,MACTvC,WAAY,8CACZN,OAAQ,UACR8C,WAAY,WAEZJ,QAAStE,EATX,gCAkBR,SAAC4E,EAAA,EAAD","sources":["Api/profileUpdate.js","webpages/Profile.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\n\r\nexport const profileUpdate = async (user) => {\r\n    try {\r\n        const response = await axios.post(`/profile-update`, user)\r\n        return response.data\r\n    } catch (error) {\r\n        console.log('Error Occured Please Try Again Later.');\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Header from '../components/head/Header';\r\nimport Footer from '../components/foot/Footer';\r\nimport { Box, Divider, Typography, useMediaQuery, Button } from '@mui/material';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport { LoginContext } from '../context/Context';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport { profileUpdate } from '../Api/profileUpdate';\r\nimport { mailVerification } from '../Api/otpSend';\r\nconst useStyles = makeStyles({\r\n  Verified: {\r\n    borderWidth: '0px 2px 2px 0px',\r\n    borderStyle: 'solid',\r\n    borderColor: 'green',\r\n    position: 'absolute',\r\n    transform: 'rotate(45deg)',\r\n    height: '8px',\r\n    width: '3px',\r\n    display: 'block',\r\n    marginTop: '-4px',\r\n  },\r\n  Verified2: {\r\n    borderWidth: '0px 2px 2px 0px',\r\n    borderStyle: 'solid',\r\n    borderColor: 'green',\r\n    position: 'absolute',\r\n    transform: 'rotate(45deg)',\r\n    height: '8px',\r\n    width: '3px',\r\n    display: 'block',\r\n    marginTop: '-4px',\r\n  },\r\n})\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles()\r\n  const xlMax = useMediaQuery('(max-width:2000px)');\r\n  const xlMin = useMediaQuery('(min-width:550px)');\r\n  const sm = useMediaQuery('(max-width:550px)');\r\n\r\n  const { setShow, setMessage, setMessageType, userData, encrypt, decrypt } = React.useContext(LoginContext)\r\n  const [username, setUsername] = React.useState(decrypt(userData.USERDATA_AS_USERNAME))\r\n  const [email, setEmail] = React.useState(decrypt(userData.USERDATA_AS_EMAIL))\r\n  const [emailOTP, setEMailOTP] = React.useState('')\r\n  const [emailVerified, setEmailVerified] = React.useState(localStorage.getItem('EMAIL_VERIFIED'))\r\n  const commonProps = [\r\n    { name: 'Home Services', url: '/' }\r\n  ]\r\n\r\n\r\n  function handleEmailChange(value) {\r\n    setEmail(value)\r\n  }\r\n\r\n  function handleUsernameChange(value) {\r\n    setUsername(value)\r\n  }\r\n\r\n\r\n  async function updateProfile() {\r\n    var validRegexForEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    var validRegexForUsername = /^(?=.{8,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/;\r\n    if (!email.match(validRegexForEmail)) {\r\n      setShow(true)\r\n      setMessageType('error')\r\n      setMessage(\"Invalid Email\")\r\n      return\r\n    }\r\n    if (!username.match(validRegexForUsername)) {\r\n      setShow(true)\r\n      setMessageType('error')\r\n      setMessage(\"Username does not contains spaces and must be alphanumeric\")\r\n      return\r\n    }\r\n    const update = {\r\n      Number: decrypt(userData.USERDATA_AS_NUMBER),\r\n      Username: username,\r\n      Email: email\r\n    }\r\n    let response = await profileUpdate(update)\r\n    if (response.acknowledged) {\r\n      window.location.reload(false)\r\n      try {\r\n        localStorage.setItem('START_DATA', JSON.stringify({\r\n          USERDATA_AS_NUMBER: userData.USERDATA_AS_NUMBER,\r\n          USERDATA_AS_USERNAME: encrypt(username),\r\n          USERDATA_AS_EMAIL: encrypt(email),\r\n        }));\r\n        localStorage.setItem('EMAIL_VERIFIED', false)\r\n      } catch (err) {\r\n        return undefined;\r\n      }\r\n    }\r\n    else {\r\n      setShow(true)\r\n      setMessageType('error')\r\n      setMessage(\"Something went wrong.Try again later.\")\r\n    }\r\n  }\r\n\r\n  const handleOTPChange = (value) => {\r\n    if (value.length === 6) {\r\n      if (value === emailOTP) {\r\n        setEmailVerified(true)\r\n        setEMailOTP('')\r\n        localStorage.setItem('EMAIL_VERIFIED', true)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const emailVerify = async () => {\r\n    let response = await mailVerification({\r\n      Email: email\r\n    })\r\n    if (response) setEMailOTP(response.slice(0, 6))\r\n    else {\r\n      setShow(true)\r\n      setMessageType('error')\r\n      setMessage(\"Your entered email is incorrect. Please enter and verify again.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Header commonProps={commonProps} />\r\n      {\r\n        xlMax && xlMin && (\r\n\r\n          <Box sx={{ display: \"flex\", height: '730px', }}>\r\n            <Box sx={{ width: '20%', pt: 10 }}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', cursor: 'pointer', alignItems: 'center', borderTop: '2px solid white', borderBottom: '2px solid white', px: 4, py: 2, background: '#1CD8D2' }}>\r\n                <Typography sx={{ fontSize: '16px', }}> Profile</Typography>\r\n                <ArrowForwardIosIcon sx={{ fontSize: '16px' }} />\r\n              </Box>\r\n            </Box>\r\n            <Box sx={{ pt: 10, width: '100%' }}>\r\n              <Typography sx={{ color: '#F45C43', fontSize: '18px', ml: 3, py: 2 }}>Edit Your Profile</Typography>\r\n              <Divider />\r\n\r\n              <Box sx={{ display: 'flex', displayContent: 'space-evenly', alignItems: 'center', p: 3 }}>\r\n                <Typography sx={{ color: '#464646', fontSize: '16px', fontWeight: '600', ml: 3, py: 2 }}>Name</Typography>\r\n                <input\r\n                  defaultValue={decrypt(userData.USERDATA_AS_USERNAME)}\r\n                  onChange={(e) => handleUsernameChange(e.target.value)}\r\n                  type='text'\r\n                  style={{\r\n                    border: '1px solid #464646',\r\n                    userSelect: 'none',\r\n                    width: '45%',\r\n                    height: '30px',\r\n                    fontSize: '14px',\r\n                    paddingLeft: '10px',\r\n                    marginLeft: '30px',\r\n                  }} />\r\n              </Box>\r\n\r\n              <Box sx={{ display: 'flex', displayContent: 'space-evenly', alignItems: 'center', p: 3 }}>\r\n                <Typography sx={{ color: '#464646', fontSize: '16px', fontWeight: '600', ml: 3, py: 2 }}>Email</Typography>\r\n                <input\r\n                  defaultValue={decrypt(userData.USERDATA_AS_EMAIL)}\r\n                  onChange={(e) => handleEmailChange(e.target.value)}\r\n                  type='text'\r\n                  style={{\r\n                    borderTop: emailVerified===\"true\"?'none':'1px solid #464646',\r\n                    borderBottom:emailVerified===\"true\"?'none': '1px solid #464646',\r\n                    borderLeft:emailVerified===\"true\"?'none': '1px solid #464646',\r\n                    borderRight: 'none',\r\n                    userSelect: 'none',\r\n                    width: '45%',\r\n                    height: '30px',\r\n                    fontSize: '14px',\r\n                    paddingLeft: '10px',\r\n                    marginLeft: '30px'\r\n                  }} />\r\n                {\r\n                  emailVerified===\"true\" ?\r\n                    <Tooltip title=\"Verified\" placement=\"right\" arrow>\r\n                      <Box className={classes.Verified2} sx={{ ml: 38 }}></Box>\r\n                    </Tooltip>\r\n                    :\r\n                    <Tooltip title=\"Not Verified\" placement=\"right\" arrow>\r\n                      <WarningIcon sx={{ height: '32px', borderTop: '1px solid #464646', borderBottom: '1px solid #464646', borderRight: '1px solid #464646', borderLeft: 'none', fontSize: '20px', color: 'red', px: 1, background: '#e5e5e5' }} />\r\n                    </Tooltip>\r\n                }\r\n\r\n              </Box>\r\n              {\r\n                emailOTP ?\r\n                  <Box sx={{ ml: 15 }}>\r\n                    <input\r\n                      placeholder='OTP'\r\n                      type='number'\r\n                      onChange={e => handleOTPChange(e.target.value)}\r\n                      style={{\r\n                        border: 'none',\r\n                        borderBottom: \"1px solid black\",\r\n                        userSelect: 'none',\r\n                        textAlign: 'center',\r\n                        // width: '50%',\r\n                        height: '35px',\r\n                        fontSize: '14px',\r\n                        margin: '5px auto',\r\n                      }} />\r\n                    <br />\r\n                    <Button sx={{ fontSize: '16px', textTransform: 'none', ml: 6 }} variant='contained' onClick={emailVerify} >Submit</Button>\r\n                  </Box>\r\n                  :\r\n                  <>{emailVerified===\"true\" ? null : <Typography sx={{ opacity: '0.5', cursor: 'pointer', fontSize: '16px', marginLeft: '120px', textDecoration: 'underline' }} onClick={emailVerify}>Click here to generate email verification mail.</Typography>}</>\r\n              }\r\n\r\n              <Box sx={{ display: 'flex', displayContent: 'space-evenly', alignItems: 'center', p: 3 }}>\r\n                <Typography sx={{ color: '#464646', fontSize: '15px', fontWeight: '600', ml: 3, py: 2 }}>Number</Typography>\r\n                <Typography sx={{ color: '#464646', fontSize: '14px', fontWeight: '600', ml: 3, py: 2 }}>{decrypt(userData.USERDATA_AS_NUMBER).slice(3,)}</Typography>\r\n                <Tooltip title=\"Verified\" placement=\"right\" arrow>\r\n                  <Box className={classes.Verified} sx={{ ml: 25 }}></Box>\r\n                </Tooltip>\r\n\r\n              </Box>\r\n              <Box sx={{\r\n                textAlign: 'center',\r\n                marginTop: '30px',\r\n              }}>\r\n                <p style={{\r\n                  color: 'white',\r\n                  fontSize: '16px',\r\n                  textDecoration: 'none',\r\n                  margin: '0px auto',\r\n                  padding: '8px',\r\n                  background: 'linear-gradient(to right,#F45C43 ,#EB3349 )',\r\n                  fontFamily: \"Fredoka\",\r\n                  width: '8%',\r\n                  cursor: 'pointer'\r\n                }}\r\n                  onClick={updateProfile}\r\n                >\r\n                  Save Profile\r\n                </p>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n        )\r\n      }\r\n\r\n      {\r\n        !(xlMax && xlMin) && sm && (\r\n          <Box sx={{ width: '100%', mt: 8 }}>\r\n            <Typography sx={{ color: '#F45C43', fontSize: '18px', ml: 3, py: 2 }}>Edit Your Profile</Typography>\r\n            <Divider />\r\n\r\n            <Box sx={{ display: 'flex', displayContent: 'space-evenly', alignItems: 'center', p: 3 }}>\r\n              <Typography sx={{ color: '#464646', fontSize: '16px', fontWeight: '600', ml: 3, py: 2 }}>Name</Typography>\r\n              <input\r\n                value={decrypt(userData.USERDATA_AS_USERNAME)}\r\n                type='text'\r\n                style={{\r\n                  border: '1px solid #464646',\r\n                  userSelect: 'none',\r\n                  width: '45%',\r\n                  height: '30px',\r\n                  fontSize: '14px',\r\n                  paddingLeft: '10px',\r\n                  marginLeft: '30px',\r\n                }} />\r\n            </Box>\r\n\r\n            <Box sx={{ display: 'flex', displayContent: 'space-evenly', alignItems: 'center', p: 3 }}>\r\n              <Typography sx={{ color: '#464646', fontSize: '16px', fontWeight: '600', ml: 3, py: 2 }}>Email</Typography>\r\n              <input\r\n                value={decrypt(userData.USERDATA_AS_EMAIL)}\r\n                type='text'\r\n                style={{\r\n                  borderTop: '1px solid #464646',\r\n                  borderBottom: '1px solid #464646',\r\n                  borderLeft: '1px solid #464646',\r\n                  borderRight: 'none',\r\n                  userSelect: 'none',\r\n                  width: '45%',\r\n                  height: '30px',\r\n                  fontSize: '14px',\r\n                  paddingLeft: '10px',\r\n                  marginLeft: '30px'\r\n                }} />\r\n              <Tooltip title=\"Not Verified\" placement=\"right\" arrow>\r\n                <WarningIcon sx={{ height: '32px', borderTop: '1px solid #464646', borderBottom: '1px solid #464646', borderRight: '1px solid #464646', borderLeft: 'none', fontSize: '20px', color: 'red', px: 1, background: '#e5e5e5' }} />\r\n              </Tooltip>\r\n            </Box>\r\n            <Typography sx={{ opacity: '0.5', cursor: 'pointer', fontSize: '16px', marginLeft: '120px', textDecoration: 'underline' }}>Verify you email</Typography>\r\n            <Box sx={{ display: 'flex', displayContent: 'space-evenly', alignItems: 'center', p: 3 }}>\r\n              <Typography sx={{ color: '#464646', fontSize: '15px', fontWeight: '600', ml: 3, py: 2 }}>Number</Typography>\r\n              <Typography sx={{ color: '#464646', fontSize: '14px', fontWeight: '600', ml: 3, py: 2 }}>{decrypt(userData.USERDATA_AS_NUMBER).slice(3,)}</Typography>\r\n              <Tooltip title=\"Verified\" placement=\"right\" arrow>\r\n                <Box className={classes.Verified} sx={{ ml: 25 }}></Box>\r\n              </Tooltip>\r\n\r\n            </Box>\r\n            <Box sx={{\r\n              textAlign: 'center',\r\n              marginTop: '30px',\r\n            }}>\r\n              <Typography sx={{\r\n                color: 'white',\r\n                fontSize: '16px',\r\n                textDecoration: 'none',\r\n                padding: '8px',\r\n                background: 'linear-gradient(to right,#F45C43 ,#EB3349 )',\r\n                cursor: 'pointer',\r\n                fontFamily: \"Fredoka\",\r\n              }}\r\n                onClick={updateProfile}\r\n              >\r\n                Save Profile\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n        )\r\n      }\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n"],"names":["profileUpdate","user","axios","response","data","console","log","useStyles","makeStyles","Verified","borderWidth","borderStyle","borderColor","position","transform","height","width","display","marginTop","Verified2","Profile","classes","xlMax","useMediaQuery","xlMin","sm","React","LoginContext","setShow","setMessage","setMessageType","userData","encrypt","decrypt","USERDATA_AS_USERNAME","username","setUsername","USERDATA_AS_EMAIL","email","setEmail","emailOTP","setEMailOTP","localStorage","getItem","emailVerified","setEmailVerified","updateProfile","validRegexForEmail","validRegexForUsername","match","update","Number","USERDATA_AS_NUMBER","Username","Email","acknowledged","window","location","reload","setItem","JSON","stringify","undefined","emailVerify","mailVerification","slice","Header","commonProps","name","url","Box","sx","pt","justifyContent","cursor","alignItems","borderTop","borderBottom","px","py","background","Typography","fontSize","ArrowForwardIos","color","ml","Divider","displayContent","p","fontWeight","defaultValue","onChange","e","value","target","type","style","border","userSelect","paddingLeft","marginLeft","borderLeft","borderRight","Tooltip","title","placement","arrow","className","Warning","placeholder","length","textAlign","margin","Button","textTransform","variant","onClick","opacity","textDecoration","padding","fontFamily","mt","Footer"],"sourceRoot":""}